import { asserts } from "./deps.ts";
import { email } from "./mod.ts";

const { assertEquals } = asserts;

// valid emails
[
  "test@example.com",
  "support@subdomain.example.com",
  "first.last@iana.org",
  "1234567890123456789012345678901234567890123456789012345678901234@iana.org",
  "first.last@sub.do,com",
  "first@last@iana.org",
  "x@x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x2",
  "1234567890123456789012345678901234567890123456789012345678@12345678901234567890123456789012345678901234567890123456789.12345678901234567890123456789012345678901234567890123456789.123456789012345678901234567890123456789012345678901234567890123.iana.org",
  "first.last@3com.com",
  "first.last@123.iana.org",
  "first.last@x23456789012345678901234567890123456789012345678901234567890123.iana.org",
  "123456789012345678901234567890123456789012345678901234567890@12345678901234567890123456789012345678901234567890123456789.12345678901234567890123456789012345678901234567890123456789.12345678901234567890123456789012345678901234567890123456789.12345.iana.org",
  "12345678901234567890123456789012345678901234567890123456789012345@iana.org",
  ".first.last@iana.org",
  "first..last@iana.org",
  "first\\\\@last@iana.org",
  "first.last@example.123",
  "user+mailbox@iana.org",
  "customer/department=shipping@iana.org",
  "$A12345@iana.org",
  "!def!xyz%abc@iana.org",
  "_somename@iana.org",
  "dclo@us.ibm.com",
  "abc\\@def@iana.org",
  "peter.piper@iana.org",
  "abc@def@iana.org",
  "abc\\\\@def@iana.org",
  "qu@iana.org",
  ".dot@iana.org",
  "two..dot@iana.org",
  "hello world@iana.org",
  "gatsby@f.sc.ot.t.f.i.tzg.era.l.d.",
  "test@iana.org",
  "1234567890@iana.org",
  "test+test@iana.org",
  "test-test@iana.org",
  "t*est@iana.org",
  "+1~1+@iana.org",
  "{_test_}@iana.org",
  "test.test@iana.org",
  "test@123.123.123.x123",
  "test@123.123.123.123",
  "test@example.iana.org",
  "test@example.example.iana.org",
  "test..test@iana.org",
  ".test@iana.org",
  "test@test@iana.org",
  "-- test --@iana.org",
  "test@123.123.123.123]",
  "customer/department@iana.org",
  "_Yosemite.Sam@iana.org",
  "~@iana.org",
  ".wooly@iana.org",
  "wo..oly@iana.org",
  "Ima.Fool@iana.org",
  "Ima Fool@iana.org",
  "phil.h\\@\\@ck@haacked.com",
  "first\\last@iana.org",
  "Abc\\@def@iana.org",
  "Fred\\ Bloggs@iana.org",
  "Joe.\\\\Blow@iana.org",
  "{^c\\@**Dog^}@cartoon.com",
  "first().last@iana.org",
  "first(middle)last@iana.org",
  "first(abc.def).last@iana.org",
  "name.lastname@domain.com",
  "a@bar.com",
  "a@bar.com.",
  "a-b@bar.com",
  "+@b.c",
  "+@b.com",
  "a@b.co-foo.uk",
  "valid@about.museum",
  "invalid@about.museum-",
  "shaitan@my-domain.thisisminekthx",
  "foobar@192.168.0.1",
  "user%uucp!path@berkeley.edu",
  "test. &#13;&#10;&#13;&#10;obs@syntax.com",
  "test.&#13;&#10;&#13;&#10;obs@syntax.com",
  "cdburgess+!#$%&'*-/=?+_{}|~test@gmail.com",
  "test@test.com",
  "test@example.com&#10;",
  "test@xn--example.com",
  "x@x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456789.x23456",
  "first.last@x234567890123456789012345678901234567890123456789012345678901234.iana.org",
  "test@123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012.com",
  'Doug\\ \\"Ace\\"\\ Lovell@iana.org',
  "Test.&#13;&#10;Folding.&#13;&#10;Whitespace@iana.org",
  'first."".last@iana.org',
  "first.(&#13;&#10;middle &#13;&#10;)last@iana.org",
  'first(a"bc.def).last@iana.org',
  "Invalid \\&#10;Folding \\&#10;Whitespace@iana.org",
].forEach((value) => {
  Deno.test(`[email] ${value} is valid`, () => {
    assertEquals(email.valid(value), true);
  });
});

// invalid emails
[
  'first"last"@iana.org',
  'first@last"@iana.org',
  'first\\\\last"@iana.org',
  "first.last@[12.34.56.78]",
  "first.last@[IPv6:::12.34.56.78]",
  "first.last",
  "first.last.@iana.org",
  'first"last"@iana.org',
  'first\\last"@iana.org',
  '"""@iana.org',
  '"\\"@iana.org',
  '""@iana.org',
  "first.last@",
  "first.last@[.12.34.56.78]",
  "first.last@[12.34.56.789]",
  "first.last@[::12.34.56.78]",
  "first.last@[IPv5:::12.34.56.78]",
  "first.last@com",
  "first.last@-xample.com",
  "first.last@exampl-.com",
  'Abc\\@def"@iana.org',
  'Fred\\ Bloggs"@iana.org',
  'Joe.\\\\Blow"@iana.org',
  'Abc@def"@iana.org',
  'Fred Bloggs"@iana.org',
  "abc\\\\@iana.org",
  'Doug \\"Ace\\" L."@iana.org',
  "abc\\@iana.org",
  "@iana.org",
  "doug@",
  'ote"@iana.org',
  "dot.@iana.org",
  'Doug "Ace" L."@iana.org',
  'Doug\\ \\"Ace\\"\\ L\\.@iana.org',
  "TEST@iana.org",
  '[[test]]"@iana.org',
  'test.test"@iana.org',
  'test."test"@iana.org',
  'test@test"@iana.org',
  "test@[123.123.123.123]",
  "test.iana.org",
  "test.@iana.org",
  "test@@iana.org",
  "[test]@iana.org",
  'test\\test"@iana.org',
  'test"test"@iana.org',
  "()[]\\;:,><@iana.org",
  "test@.",
  "test@example.",
  "test@.org",
  "test@example",
  "test@[123.123.123.123",
  "NotAnEmail",
  "@NotAnEmail",
  'test\\\\blah"@iana.org',
  'test\\blah"@iana.org',
  'test\\&#13;blah"@iana.org',
  'test &#13;blah"@iana.org',
  'test\\"blah"@iana.org',
  'test"blah"@iana.org',
  "pootietang.@iana.org",
  ".@iana.org",
  'Austin@Powers"@iana.org',
  'Ima.Fool"@iana.org',
  'Ima Fool"@iana.org',
  'first"."last"@iana.org',
  'first".middle."last"@iana.org',
  'first\\\\"last"@iana.org',
  'first".las\t@iana.org',
  'first."last"@iana.org',
  'first"."middle"."last"@iana.org',
  'first.middle"."last"@iana.org',
  'first.middle.last"@iana.org',
  'first..last"@iana.org',
  "foo@[\\1.2.3.4]",
  'first\\\\\\"last"@iana.org',
  'first."mid\\dle"."last"@iana.org',
  'test\\&#13;&#10;blah"@iana.org',
  'test &#13;&#10;blah"@iana.org',
  "(foo)cal(bar)@(baz)iamcal.com(quux)",
  "cal@iamcal(woo).(yay)com",
  'foo"(yay)@(hoopla)[1.2.3.4]',
  "cal(woo(yay)hoopla)@iamcal.com",
  "cal(foo\\@bar)@iamcal.com",
  "cal(foo\\)bar)@iamcal.com",
  "cal(foo(bar)@iamcal.com",
  "cal(foo)bar)@iamcal.com",
  "cal(foo\\)@iamcal.com",
  "pete(his account)@silly.test(his host)",
  "c@(Chris's host.)public.example",
  "jdoe@machine(comment).  example",
  "1234   @   local(blah)  .machine .example",
  'first.(")middle.last(")@iana.org',
  "first(abc\\(def)@iana.org",
  "a(a(b(c)d(e(f))g)h(i)j)@iana.org",
  "a(a(b(c)d(e(f))g)(h(i)j)@iana.org",
  ".@",
  "a@b",
  "@bar.com",
  "@@bar.com",
  "aaa.com",
  "aaa@.com",
  "aaa@.123",
  "aaa@[123.123.123.123]",
  "aaa@[123.123.123.123]a",
  "aaa@[123.123.123.333]",
  "a@bar",
  "a@-b.com",
  "a@b-.com",
  "-@..com",
  "-@a..com",
  'hello my name is"@s\tutter.com',
  'Test \\"Fail\\" Ing"@iana.org',
  "test@...........com",
  'Joe\\\\Blow"@iana.org',
  'first(last)"@iana.org',
  "first.last @iana.org",
  'Unicode NULL \\␀"@char.com',
  'Unicode NULL ␀"@char.com',
  "Unicode NULL \\␀@char.com",
  "first.last@[IPv6:::a2:a3:a4:b1:b2:b3:b4]",
  "first.last@[IPv6:a1:a2:a3:a4:b1:b2:b3::]",
  "first.last@[IPv6::]",
  "first.last@[IPv6:::]",
  "first.last@[IPv6::::]",
  "first.last@[IPv6::b4]",
  "first.last@[IPv6:::b4]",
  "first.last@[IPv6::::b4]",
  "first.last@[IPv6::b3:b4]",
  "first.last@[IPv6:::b3:b4]",
  "first.last@[IPv6::::b3:b4]",
  "first.last@[IPv6:a1::b4]",
  "first.last@[IPv6:a1:::b4]",
  "first.last@[IPv6:a1:]",
  "first.last@[IPv6:a1::]",
  "first.last@[IPv6:a1:::]",
  "first.last@[IPv6:a1:a2:]",
  "first.last@[IPv6:a1:a2::]",
  "first.last@[IPv6:a1:a2:::]",
  "first.last@[IPv6:0123:4567:89ab:cdef::]",
  "first.last@[IPv6:0123:4567:89ab:CDEF::]",
  "first.last@[IPv6::11.22.33.44]",
  "first.last@[IPv6::::11.22.33.44]",
  "first.last@[IPv6:a1:11.22.33.44]",
  "first.last@[IPv6:a1::11.22.33.44]",
  "first.last@[IPv6:a1:::11.22.33.44]",
  "first.last@[IPv6:a1:a2::11.22.33.44]",
  "first.last@[IPv6:a1:a2:::11.22.33.44]",
  "first.last@[IPv6:a1::11.22.33]",
  "first.last@[IPv6:a1::11.22.33.44.55]",
  "first.last@[IPv6:a1::b211.22.33.44]",
  "first.last@[IPv6:a1::b2:11.22.33.44]",
  "first.last@[IPv6:a1::b2::11.22.33.44]",
  "first.last@[IPv6:a1::b3:]",
  "first.last@[IPv6::a2::b4]",
  "first.last@[IPv6:a1:a2:a3:a4:b1:b2:b3:]",
  "first.last@[IPv6::a2:a3:a4:b1:b2:b3:b4]",
  "test@Bücher.ch",
  "a@a",
  "first.last@[IPv6:1111:2222:3333::4444:12.34.56.78]",
  "first.last@[IPv6:1111:2222:3333:4444:5555:6666:12.34.56.78]",
  "first.last@[IPv6:::1111:2222:3333:4444:5555:6666]",
  "first.last@[IPv6:1111:2222:3333::4444:5555:6666]",
  "first.last@[IPv6:1111:2222:3333:4444:5555:6666::]",
  "first.last@[IPv6:1111:2222:3333:4444:5555:6666:7777:8888]",
  "first.last@[IPv6:1111:2222:3333::4444:5555:12.34.56.78]",
  "first.last@[IPv6:1111:2222:3333:4444:5555:12.34.56.78]",
  "first.last@[IPv6:1111:2222:3333:4444:5555:6666:7777]",
  "first.last@[IPv6:1111:2222::3333::4444:5555:6666]",
  "first.last@[IPv6:1111:2222:3333::4444:5555:6666:7777]",
  "first.last@[IPv6:1111:2222:333x::4444:5555]",
  "first.last@[IPv6:1111:2222:33333::4444:5555]",
  "first.last@[IPv6:1111:2222:3333:4444:5555:6666:12.34.567.89]",
  "HM2Kinsists@(that comments are allowed)this.is.ok",
  "first.last@[IPv6:::a3:a4:b1:ffff:11.22.33.44]",
  "first.last@[IPv6:::a2:a3:a4:b1:ffff:11.22.33.44]",
  "first.last@[IPv6:a1:a2:a3:a4::11.22.33.44]",
  "first.last@[IPv6:a1:a2:a3:a4:b1::11.22.33.44]",
  "first.last@[IPv6:0123:4567:89ab:cdef::11.22.33.44]",
  "first.last@[IPv6:0123:4567:89ab:cdef::11.22.33.xx]",
  "first.last@[IPv6:0123:4567:89ab:CDEF::11.22.33.44]",
  "first.last@[IPv6:0123:4567:89ab:CDEFF::11.22.33.44]",
  "first.last@[IPv6:a1::a4:b1::b4:11.22.33.44]",
  "first.last@[IPv6:a1:a2:a3:a4::b1:b2:b3:b4]",
  "first.last@[IPv6:1111:2222:3333:4444:5555:6666:7777:12.34.56.78]",
  "first.last@[IPv6:1111:2222:3333:4444:5555:6666:7777:8888:9999]",
  "first(12345678901234567890123456789012345678901234567890)last@(1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890)iana.org",
  'first(Welcome to&#13;&#10; the("wonderful"(!)) world &#13;&#10; of email)@iana.org',
  'first(abc("def".ghi).mno)middle(abc("def".ghi).mno).last@(abc("def".ghi).mno)example(abc("def".ghi).mno).(abc("def".ghi).mno)com(abc("def".ghi).mno)',
  "first.last@x(1234567890123456789012345678901234567890123456789012345678901234567890).com",
].forEach((value) => {
  Deno.test(`[email] ${value} is invalid`, () => {
    assertEquals(email.valid(value), false);
  });
});
